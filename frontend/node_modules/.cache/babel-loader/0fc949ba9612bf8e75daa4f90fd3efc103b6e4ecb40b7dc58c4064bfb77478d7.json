{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\video-editor\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport './App.css';\n\n// 上传页面组件\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UploadPage() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [outline, setOutline] = useState(null);\n  const [pptContent, setPptContent] = useState(null);\n  const navigate = useNavigate();\n  const handleFileUpload = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile && selectedFile.size > 30 * 1024 * 1024) {\n      setMessage('文件大小不能超过 30MB');\n      return;\n    }\n    setFile(selectedFile);\n    setMessage('');\n  };\n  const handleSubmit = async () => {\n    if (!file) {\n      setMessage('请先选择文件');\n      return;\n    }\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch('http://localhost:5000/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setMessage(data.message);\n      if (data.data) {\n        setOutline(data.data.outline);\n        setPptContent(data.data.pptContent);\n      }\n    } catch (error) {\n      console.error('上传错误:', error);\n      setMessage('上传失败：' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const cleanJsonString = str => {\n    try {\n      // 如果已经是对象，直接返回\n      if (typeof str === 'object') return str;\n\n      // 移除 markdown 代码块标记和多余的空格\n      let cleaned = str;\n      if (cleaned.includes('```json')) {\n        cleaned = cleaned.replace(/```json\\s*/, '').replace(/\\s*```\\s*$/, '');\n      }\n\n      // 尝试解析 JSON\n      return JSON.parse(cleaned);\n    } catch (error) {\n      console.error('清理 JSON 字符串失败:', error);\n      console.log('原始字符串:', str);\n      return null;\n    }\n  };\n  const renderOutline = () => {\n    if (!outline) return null;\n    let outlineData;\n    try {\n      // 如果已经是对象，直接使用\n      if (typeof outline === 'object') {\n        outlineData = outline;\n      } else {\n        // 尝试清理和解析 JSON 字符串\n        let cleanedStr = outline;\n        if (cleanedStr.includes('```json')) {\n          cleanedStr = cleanedStr.replace(/```json\\s*/, '').replace(/\\s*```\\s*$/, '');\n        }\n        outlineData = JSON.parse(cleanedStr);\n      }\n\n      // 验证数据结构\n      if (!outlineData || !outlineData.slides) {\n        console.log('大纲数据:', outlineData);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: \"\\u5927\\u7EB2\\u6570\\u636E\\u7ED3\\u6784\\u4E0D\\u5B8C\\u6574\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 16\n        }, this);\n      }\n\n      // 继续渲染大纲...\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outline-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u6F14\\u8BB2\\u5927\\u7EB2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), outlineData.slides.map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"outline-slide\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u7B2C \", slide.page_number || index + 1, \" \\u9875\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), slide.subtitle && /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: slide.subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slide-content\",\n            children: [slide.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slide-notes\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u5907\\u6CE8\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this), \" \", slide.notes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slide-points\",\n              children: Array.isArray(slide.content) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u8981\\u70B9\\uFF1A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: slide.content.map((point, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: point\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: slide.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerateScript,\n          className: \"generate-script-btn\",\n          disabled: isLoading,\n          children: isLoading ? '正在生成脚本...' : '开始生成脚本'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this);\n    } catch (error) {\n      console.log('原始大纲数据:', outline);\n      console.error('处理大纲错误:', error);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [\"\\u5904\\u7406\\u5927\\u7EB2\\u65F6\\u51FA\\u9519: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const handleGenerateScript = async () => {\n    try {\n      setIsLoading(true);\n      console.log('发送请求数据:', {\n        pptContent: pptContent,\n        outline: outline\n      });\n      const response = await fetch('http://localhost:5000/api/generate-script', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          pptContent: pptContent,\n          outline: cleanJsonString(outline),\n          // 确保数据格式正确\n          fileId: 1 // 如果需要fileId，从之前的上传响应中获取\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('生成脚本响应:', data);\n      navigate('/script-editor', {\n        state: {\n          script: data.script,\n          pptContent: pptContent,\n          outline: outline\n        }\n      });\n    } catch (error) {\n      console.error('生成脚本错误:', error);\n      setMessage('生成脚本失败：' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 渲染 PPT 内容的函数\n  const renderPPTContent = () => {\n    if (!pptContent || !pptContent.slides) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ppt-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"PPT \\u5185\\u5BB9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slides-container\",\n        children: pptContent.slides.map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slide\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u5E7B\\u706F\\u7247 \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u6807\\u9898\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 18\n            }, this), \" \", slide.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u5185\\u5BB9\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 18\n            }, this), \" \", slide.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI\\u89C6\\u9891\\u751F\\u6210\\u5668\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".pptx\",\n        onChange: handleFileUpload,\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        disabled: isLoading || !file,\n        children: isLoading ? '正在生成大纲...' : '上传并生成大纲'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `message ${message.includes('失败') ? 'error' : 'success'}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: [renderPPTContent(), renderOutline()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n}\n\n// 添加脚本编辑器组件\n_s(UploadPage, \"7NlaEvsTTEWml+yZatMfE7H5sIE=\", false, function () {\n  return [useNavigate];\n});\n_c = UploadPage;\nfunction ScriptEditor() {\n  _s2();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [scripts, setScripts] = useState([]);\n  const [regenerateRequirements, setRegenerateRequirements] = useState({});\n  const [isLoading, setIsLoading] = useState({});\n  useEffect(() => {\n    var _location$state;\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.script) {\n      const scriptData = typeof location.state.script === 'string' ? JSON.parse(location.state.script) : location.state.script;\n      setScripts(scriptData);\n    }\n  }, [location.state]);\n  const handleRegenerateScript = async pageIndex => {\n    try {\n      setIsLoading(prev => ({\n        ...prev,\n        [pageIndex]: true\n      }));\n      const response = await fetch('http://localhost:5000/api/regenerate-script', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          pageIndex,\n          requirement: regenerateRequirements[pageIndex],\n          pptContent: location.state.pptContent,\n          outline: location.state.outline\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setScripts(prev => {\n        const newScripts = [...prev];\n        newScripts[pageIndex] = data.script;\n        return newScripts;\n      });\n    } catch (error) {\n      console.error('重新生成脚本错误:', error);\n    } finally {\n      setIsLoading(prev => ({\n        ...prev,\n        [pageIndex]: false\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"script-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u6F14\\u8BB2\\u811A\\u672C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"script-content\",\n      children: scripts.map((script, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"script-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\u7B2C \", index + 1, \" \\u9875\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-content\",\n          children: script.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"regenerate-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"\\u8F93\\u5165\\u7279\\u6B8A\\u8981\\u6C42...\",\n            value: regenerateRequirements[index] || '',\n            onChange: e => setRegenerateRequirements(prev => ({\n              ...prev,\n              [index]: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRegenerateScript(index),\n            disabled: isLoading[index],\n            children: isLoading[index] ? '重新生成中...' : '重新生成'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n}\n\n// 主应用组件\n_s2(ScriptEditor, \"taAbAGfNmXS3Ao4lbw7wcX+gOUo=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c2 = ScriptEditor;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(UploadPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/script-editor\",\n        element: /*#__PURE__*/_jsxDEV(ScriptEditor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UploadPage\");\n$RefreshReg$(_c2, \"ScriptEditor\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","useNavigate","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadPage","_s","file","setFile","message","setMessage","isLoading","setIsLoading","outline","setOutline","pptContent","setPptContent","navigate","handleFileUpload","e","selectedFile","target","files","size","handleSubmit","formData","FormData","append","response","fetch","method","body","ok","Error","status","data","json","error","console","cleanJsonString","str","cleaned","includes","replace","JSON","parse","log","renderOutline","outlineData","cleanedStr","slides","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","slide","index","page_number","subtitle","notes","Array","isArray","content","point","i","onClick","handleGenerateScript","disabled","headers","stringify","fileId","errorData","state","script","renderPPTContent","title","type","accept","onChange","_c","ScriptEditor","_s2","location","scripts","setScripts","regenerateRequirements","setRegenerateRequirements","_location$state","scriptData","handleRegenerateScript","pageIndex","prev","requirement","newScripts","placeholder","value","_c2","App","path","element","_c3","$RefreshReg$"],"sources":["D:/projects/video-editor/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useLocation } from 'react-router-dom';\r\nimport './App.css';\r\n\r\n// 上传页面组件\r\nfunction UploadPage() {\r\n  const [file, setFile] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [outline, setOutline] = useState(null);\r\n  const [pptContent, setPptContent] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleFileUpload = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile && selectedFile.size > 30 * 1024 * 1024) {\r\n      setMessage('文件大小不能超过 30MB');\r\n      return;\r\n    }\r\n    setFile(selectedFile);\r\n    setMessage('');\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!file) {\r\n      setMessage('请先选择文件');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setMessage(data.message);\r\n      \r\n      if (data.data) {\r\n        setOutline(data.data.outline);\r\n        setPptContent(data.data.pptContent);\r\n      }\r\n    } catch (error) {\r\n      console.error('上传错误:', error);\r\n      setMessage('上传失败：' + error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const cleanJsonString = (str) => {\r\n    try {\r\n      // 如果已经是对象，直接返回\r\n      if (typeof str === 'object') return str;\r\n      \r\n      // 移除 markdown 代码块标记和多余的空格\r\n      let cleaned = str;\r\n      if (cleaned.includes('```json')) {\r\n        cleaned = cleaned.replace(/```json\\s*/, '').replace(/\\s*```\\s*$/, '');\r\n      }\r\n      \r\n      // 尝试解析 JSON\r\n      return JSON.parse(cleaned);\r\n    } catch (error) {\r\n      console.error('清理 JSON 字符串失败:', error);\r\n      console.log('原始字符串:', str);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const renderOutline = () => {\r\n    if (!outline) return null;\r\n    \r\n    let outlineData;\r\n    try {\r\n      // 如果已经是对象，直接使用\r\n      if (typeof outline === 'object') {\r\n        outlineData = outline;\r\n      } else {\r\n        // 尝试清理和解析 JSON 字符串\r\n        let cleanedStr = outline;\r\n        if (cleanedStr.includes('```json')) {\r\n          cleanedStr = cleanedStr.replace(/```json\\s*/, '').replace(/\\s*```\\s*$/, '');\r\n        }\r\n        outlineData = JSON.parse(cleanedStr);\r\n      }\r\n\r\n      // 验证数据结构\r\n      if (!outlineData || !outlineData.slides) {\r\n        console.log('大纲数据:', outlineData);\r\n        return <div className=\"error-message\">大纲数据结构不完整</div>;\r\n      }\r\n\r\n      // 继续渲染大纲...\r\n      return (\r\n        <div className=\"outline-container\">\r\n          <h2>演讲大纲</h2>\r\n          {outlineData.slides.map((slide, index) => (\r\n            <div key={index} className=\"outline-slide\">\r\n              <h3>第 {slide.page_number || (index + 1)} 页</h3>\r\n              {slide.subtitle && <h4>{slide.subtitle}</h4>}\r\n              <div className=\"slide-content\">\r\n                {slide.notes && (\r\n                  <div className=\"slide-notes\">\r\n                    <strong>备注：</strong> {slide.notes}\r\n                  </div>\r\n                )}\r\n                <div className=\"slide-points\">\r\n                  {Array.isArray(slide.content) ? (\r\n                    <>\r\n                      <strong>要点：</strong>\r\n                      <ul>\r\n                        {slide.content.map((point, i) => (\r\n                          <li key={i}>{point}</li>\r\n                        ))}\r\n                      </ul>\r\n                    </>\r\n                  ) : (\r\n                    <p>{slide.content}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <button \r\n            onClick={handleGenerateScript}\r\n            className=\"generate-script-btn\"\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? '正在生成脚本...' : '开始生成脚本'}\r\n          </button>\r\n        </div>\r\n      );\r\n    } catch (error) {\r\n      console.log('原始大纲数据:', outline);\r\n      console.error('处理大纲错误:', error);\r\n      return <div className=\"error-message\">处理大纲时出错: {error.message}</div>;\r\n    }\r\n  };\r\n\r\n  const handleGenerateScript = async () => {\r\n    try {\r\n        setIsLoading(true);\r\n        console.log('发送请求数据:', {\r\n            pptContent: pptContent,\r\n            outline: outline\r\n        });\r\n\r\n        const response = await fetch('http://localhost:5000/api/generate-script', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                pptContent: pptContent,\r\n                outline: cleanJsonString(outline),  // 确保数据格式正确\r\n                fileId: 1  // 如果需要fileId，从之前的上传响应中获取\r\n            }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('生成脚本响应:', data);\r\n\r\n        navigate('/script-editor', { \r\n            state: { \r\n                script: data.script,\r\n                pptContent: pptContent,\r\n                outline: outline\r\n            } \r\n        });\r\n    } catch (error) {\r\n        console.error('生成脚本错误:', error);\r\n        setMessage('生成脚本失败：' + error.message);\r\n    } finally {\r\n        setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // 渲染 PPT 内容的函数\r\n  const renderPPTContent = () => {\r\n    if (!pptContent || !pptContent.slides) return null;\r\n    \r\n    return (\r\n      <div className=\"ppt-content\">\r\n        <h2>PPT 内容</h2>\r\n        <div className=\"slides-container\">\r\n          {pptContent.slides.map((slide, index) => (\r\n            <div key={index} className=\"slide\">\r\n              <h3>幻灯片 {index + 1}</h3>\r\n              <p><strong>标题：</strong> {slide.title}</p>\r\n              <p><strong>内容：</strong> {slide.content}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-container\">\r\n      <h1>AI视频生成器</h1>\r\n      <div className=\"upload-form\">\r\n        <input \r\n          type=\"file\" \r\n          accept=\".pptx\" \r\n          onChange={handleFileUpload}\r\n          disabled={isLoading}\r\n        />\r\n        <button \r\n          onClick={handleSubmit} \r\n          disabled={isLoading || !file}\r\n        >\r\n          {isLoading ? '正在生成大纲...' : '上传并生成大纲'}\r\n        </button>\r\n      </div>\r\n      \r\n      {message && (\r\n        <p className={`message ${message.includes('失败') ? 'error' : 'success'}`}>\r\n          {message}\r\n        </p>\r\n      )}\r\n\r\n      <div className=\"content-container\">\r\n        {renderPPTContent()}\r\n\r\n        {renderOutline()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// 添加脚本编辑器组件\r\nfunction ScriptEditor() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [scripts, setScripts] = useState([]);\r\n  const [regenerateRequirements, setRegenerateRequirements] = useState({});\r\n  const [isLoading, setIsLoading] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (location.state?.script) {\r\n      const scriptData = typeof location.state.script === 'string' \r\n        ? JSON.parse(location.state.script) \r\n        : location.state.script;\r\n      setScripts(scriptData);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const handleRegenerateScript = async (pageIndex) => {\r\n    try {\r\n      setIsLoading(prev => ({ ...prev, [pageIndex]: true }));\r\n      \r\n      const response = await fetch('http://localhost:5000/api/regenerate-script', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          pageIndex,\r\n          requirement: regenerateRequirements[pageIndex],\r\n          pptContent: location.state.pptContent,\r\n          outline: location.state.outline\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setScripts(prev => {\r\n        const newScripts = [...prev];\r\n        newScripts[pageIndex] = data.script;\r\n        return newScripts;\r\n      });\r\n    } catch (error) {\r\n      console.error('重新生成脚本错误:', error);\r\n    } finally {\r\n      setIsLoading(prev => ({ ...prev, [pageIndex]: false }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"script-editor\">\r\n      <h1>演讲脚本</h1>\r\n      <div className=\"script-content\">\r\n        {scripts.map((script, index) => (\r\n          <div key={index} className=\"script-page\">\r\n            <h2>第 {index + 1} 页</h2>\r\n            <div className=\"page-content\">\r\n              {script.content}\r\n            </div>\r\n            <div className=\"regenerate-section\">\r\n              <textarea\r\n                placeholder=\"输入特殊要求...\"\r\n                value={regenerateRequirements[index] || ''}\r\n                onChange={(e) => setRegenerateRequirements(prev => ({\r\n                  ...prev,\r\n                  [index]: e.target.value\r\n                }))}\r\n              />\r\n              <button \r\n                onClick={() => handleRegenerateScript(index)}\r\n                disabled={isLoading[index]}\r\n              >\r\n                {isLoading[index] ? '重新生成中...' : '重新生成'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// 主应用组件\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<UploadPage />} />\r\n        <Route path=\"/script-editor\" element={<ScriptEditor />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}